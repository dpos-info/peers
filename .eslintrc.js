module.exports = {
	parserOptions: {
		project: "./tsconfig.json",
		parser: "@typescript-eslint/parser",
		sourceType: "module",
		projectFolderIgnoreList: ["dist", "coverage", "node_modules", "public"],
	},
	env: {
		browser: true,
		node: true,
		es6: true,
	},
	plugins: ["@typescript-eslint", "prettier", "promise", "simple-import-sort", "sort-keys-fix", "unused-imports"],
	extends: [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:@typescript-eslint/recommended",
		"plugin:import/errors",
		"plugin:import/typescript",
		"plugin:import/warnings",
		"plugin:prettier/recommended",
		"plugin:promise/recommended",
		"prettier",
	],
	rules: {
		"@typescript-eslint/ban-ts-comment": "warn",
		"@typescript-eslint/ban-types": "warn",
		"@typescript-eslint/consistent-type-definitions": ["error", "interface"],
		"@typescript-eslint/explicit-module-boundary-types": "warn",
		"@typescript-eslint/no-empty-function": "warn",
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/no-floating-promises": "warn",
		"@typescript-eslint/no-misused-promises": "warn",
		"@typescript-eslint/no-non-null-assertion": "warn",
		"@typescript-eslint/no-unsafe-assignment": "warn",
		"@typescript-eslint/no-unsafe-call": "warn",
		"@typescript-eslint/no-unsafe-member-access": "warn",
		"@typescript-eslint/no-unsafe-return": "warn",
		"@typescript-eslint/no-unused-expressions": "warn",
		"@typescript-eslint/no-unused-vars": ["error"],
		"@typescript-eslint/no-var-requires": "warn",
		"@typescript-eslint/prefer-regexp-exec": "warn",
		"@typescript-eslint/restrict-plus-operands": "warn",
		"@typescript-eslint/restrict-template-expressions": "warn",
		"@typescript-eslint/unbound-method": "warn",
		"arrow-body-style": ["error", "as-needed"],
		curly: "error",
		"import/default": "error",
		"import/export": "warn",
		"import/exports-last": "warn",
		"import/extensions": "off",
		"import/first": "error",
		"import/group-exports": "off",
		"import/namespace": "error",
		"import/no-absolute-path": "error",
		"import/no-anonymous-default-export": "error",
		"import/no-cycle": "warn",
		"import/no-deprecated": "error",
		"import/no-duplicates": "error",
		"import/no-dynamic-require": "off",
		"import/no-extraneous-dependencies": "error",
		"import/no-mutable-exports": "error",
		"import/no-namespace": "warn",
		"import/no-restricted-paths": "error",
		"import/no-self-import": "error",
		"import/no-unresolved": "off",
		"import/no-unused-modules": "error",
		"import/no-useless-path-segments": "error",
		"import/no-webpack-loader-syntax": "error",
		"import/order": "warn",
		"max-lines": ["warn", { max: 300, skipBlankLines: true, skipComments: true }],
		"max-lines-per-function": ["warn", { max: 40, skipBlankLines: true, skipComments: true }],
		"no-nested-ternary": "warn", // @TODO: set to error and resolve issues
		"no-unneeded-ternary": "error",
		"no-unused-expressions": "off",
		"no-unused-vars": "off",
		"prefer-const": [
			"warn",
			{
				destructuring: "all",
			},
		],
		"prettier/prettier": [
			"off",
			{
				endOfLine: "auto",
			},
		],
		"promise/param-names": "warn",
		"simple-import-sort/exports": "error",
		"simple-import-sort/imports": "error",
		"sort-keys-fix/sort-keys-fix": ["error", "asc", { caseSensitive: true, natural: true }],
		"unused-imports/no-unused-imports-ts": "error",
	},
};
